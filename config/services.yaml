# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration

parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/"
    exclude:
      - "../src/DependencyInjection/"
      - "../src/Entity/"
      - "../src/Kernel.php"
  admin.Depenses:
    class: App\Admin\categoriesDespenseAdmin
    arguments: [~, App\Entity\Depenses, ~]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: "Depenses",
          icon: '<i class="fa fa-file-alt"></i>',
          group: Administration,
        }

  admin.InvestissementNature:
    class: App\Admin\investissementNatureAdmin
    arguments: [~, App\Entity\InvestissementNature, ~]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: "Nature de l'investissement",
          icon: '<i class="fa fa-file-alt"></i>',
          group: Administration,
        }

  admin.projetAdmin:
    class: App\Admin\projetAdmin
    arguments: [~, App\Entity\Projet, ~]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: "Projets",
          icon: '<i class="fa fa-file-alt"></i>',
          group: Administration,
        }

  admin.UserAdmin:
    class: App\Admin\UserAdmin
    arguments: [~, App\Entity\User, ~]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: "Utilisateurs",
          icon: '<i class="fa fa-file-alt"></i>',
          group: Administration,
        }

  admin.Partenaire:
    class: App\Admin\PartenaireAdmin
    arguments: [~, App\Entity\Partenaires, ~]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: "Partenaires",
          icon: '<i class="fa fa-file-alt"></i>',
          group: Administration,
        }

  admin.statAdmin:
    class: App\Admin\statAdmin
    arguments: [~, "", App\Controller\Admin\statAdminController]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: Statistique,
          icon: '<i class="fa fa-file-alt"></i>',
          group: Administration,
        }

  admin.smsClient:
    class: App\Admin\SmsAdmin
    arguments: [~, "", App\Controller\Admin\SmsStatisticsAdminController]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: "Sms",
          icon: '<i class="fa fa-file-alt"></i>',
          group: Marketing,
        }

  admin.emailClient:
    class: App\Admin\EmailClientAdmin
    arguments:
      [~, "", App\Controller\Admin\EmailClientStatisticsAdminController]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: "Emails",
          icon: '<i class="fa fa-file-alt"></i>',
          group: Marketing,
        }

  admin.seo:
    class: App\Admin\SeoAdmin
    arguments: [~, App\Entity\Seo, ~]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: "seo",
          icon: '<i class="fa fa-file-alt"></i>',
          group: setting,
        }
  admin.PolitiqueConfidentialiteAdmin:
    class: App\Admin\PolitiqueConfidentialiteAdmin
    arguments: [~, App\Entity\PolitiqueConfidentialite, ~]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: "Politique de confidentialité",
          icon: '<i class="fa fa-file-alt"></i>',
          group: setting,
        }
  admin.PopupPubFront:
    class: App\Admin\PopupPubFrontAdmin
    arguments: [~, App\Entity\PopupPubFront, ~]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: "Popup Pub Front",
          icon: '<i class="fa fa-file-alt"></i>',
          group: setting,
        }

  admin.CodePromosSubscriptionAdmin:
    class: App\Admin\CodePromosSubscriptionAdmin
    arguments: [~, App\Entity\CodePromosSubscription, ~]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: "Code promo CE",
          icon: '<i class="fa fa-file-alt"></i>',
          group: setting,
        }
  admin.CGUAdmin:
    class: App\Admin\CGUAdmin
    arguments: [~, App\Entity\CGU, ~]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: "Conditions générales d'utilisation",
          icon: '<i class="fa fa-file-alt"></i>',
          group: setting,
        }
  admin.FAQAdmin:
    class: App\Admin\FAQAdmin
    arguments: [~, App\Entity\FAQ, ~]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: "FAQ",
          icon: '<i class="fa fa-file-alt"></i>',
          group: setting,
        }
  admin.CGVAdmin:
    class: App\Admin\CGVAdmin
    arguments: [~, App\Entity\CGV, ~]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: "Conditions générales de vente",
          icon: '<i class="fa fa-file-alt"></i>',
          group: setting,
        }
  admin.CookieAdmin:
    class: App\Admin\CookieAdmin
    arguments: [~, App\Entity\Cookies, ~]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: "Cookies",
          icon: '<i class="fa fa-file-alt"></i>',
          group: setting,
        }
  admin.SettingSeoAdmin:
    class: App\Admin\SettingSeoAdmin
    arguments: [~, App\Entity\SettingSeo, ~]
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          label: "Setting Seo",
          icon: '<i class="fa fa-file-alt"></i>',
          group: setting,
        }

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
